#include <stdio.h>

int minJumps(int arr[], int n) {
    if (n <= 1) {
        return 0; // Already at the end
    }

    int maxReach = arr[0]; // Maximum index reachable
    int steps = arr[0]; // Steps required to reach maxReach
    int jumps = 1; // Number of jumps taken

    for (int i = 1; i < n; i++) {
        if (i == n - 1) {
            return jumps; // Reached the end
        }

        // Update the maximum index reachable
        maxReach = (maxReach > i + arr[i]) ? maxReach : i + arr[i];

        steps--; // Decrease steps as we move forward

        if (steps == 0) { // We need to take a jump
            jumps++;

            // If the max index reachable is less than the current index
            // then we can't proceed further, return -1
            if (i >= maxReach) {
                return -1;
            }

            steps = maxReach - i; // Set steps to reach the max index
        }
    }

    return -1;
}

int main() {
    int arr[] = {1, 3, 5, 8, 9, 2, 6, 7, 6, 8, 9};
    int n = sizeof(arr) / sizeof(arr[0]);

    int jumps = minJumps(arr, n);

    if (jumps == -1) {
        printf("Cannot reach the end of the array\n");
    } else {
        printf("Minimum number of jumps required: %d\n", jumps);
    }

    return 0;
}
